diff --git a/dist/app/middleware/index.js b/dist/app/middleware/index.js
index afa157ecf8608223860ad42548911e8aa55a6a1c..b34bc4464a6c4dfb7efb9639ef1496370c4cb2eb 100644
--- a/dist/app/middleware/index.js
+++ b/dist/app/middleware/index.js
@@ -96,7 +96,7 @@ function addLocaleToResponse(request, response, locale) {
   var _a;
   response.headers.set(LOCALE_HEADER, locale);
   if (((_a = request.cookies.get(LOCALE_COOKIE)) == null ? void 0 : _a.value) !== locale) {
-    response.cookies.set(LOCALE_COOKIE, locale, { sameSite: "strict" });
+    response.cookies.set(LOCALE_COOKIE, locale, { sameSite: "strict", maxAge: 60 * 60 * 24 * 365 });
   }
   return response;
 }
diff --git a/dist/app/server/index.d.ts b/dist/app/server/index.d.ts
index b64b1eab37cdefbd5f8cd7acae14ab3b7dbe1218..5064d7894de0a39f4c83bae362a667a7b3b2a551 100644
--- a/dist/app/server/index.d.ts
+++ b/dist/app/server/index.d.ts
@@ -15,7 +15,7 @@ declare function createI18nServer<Locales extends ImportedLocales, OtherLocales
         <Key_2 extends international_types.LocaleKeys<(OtherLocales extends ExplicitLocales ? GetLocaleType<OtherLocales> : GetLocaleType<Locales>) extends Record<string, string> ? OtherLocales extends ExplicitLocales ? GetLocaleType<OtherLocales> : GetLocaleType<Locales> : FlattenLocale<OtherLocales extends ExplicitLocales ? GetLocaleType<OtherLocales> : GetLocaleType<Locales>>, Scope, Extract<keyof ((OtherLocales extends ExplicitLocales ? GetLocaleType<OtherLocales> : GetLocaleType<Locales>) extends Record<string, string> ? OtherLocales extends ExplicitLocales ? GetLocaleType<OtherLocales> : GetLocaleType<Locales> : FlattenLocale<OtherLocales extends ExplicitLocales ? GetLocaleType<OtherLocales> : GetLocaleType<Locales>>), string>>, Value_2 extends international_types.LocaleValue = international_types.ScopedValue<(OtherLocales extends ExplicitLocales ? GetLocaleType<OtherLocales> : GetLocaleType<Locales>) extends Record<string, string> ? OtherLocales extends ExplicitLocales ? GetLocaleType<OtherLocales> : GetLocaleType<Locales> : FlattenLocale<OtherLocales extends ExplicitLocales ? GetLocaleType<OtherLocales> : GetLocaleType<Locales>>, Scope, Key_2>>(key: Key_2, ...params: international_types.CreateParams<international_types.ParamsObject<Value_2>, (OtherLocales extends ExplicitLocales ? GetLocaleType<OtherLocales> : GetLocaleType<Locales>) extends Record<string, string> ? OtherLocales extends ExplicitLocales ? GetLocaleType<OtherLocales> : GetLocaleType<Locales> : FlattenLocale<OtherLocales extends ExplicitLocales ? GetLocaleType<OtherLocales> : GetLocaleType<Locales>>, Scope, Key_2, Value_2>): string;
         <Key_3 extends international_types.LocaleKeys<(OtherLocales extends ExplicitLocales ? GetLocaleType<OtherLocales> : GetLocaleType<Locales>) extends Record<string, string> ? OtherLocales extends ExplicitLocales ? GetLocaleType<OtherLocales> : GetLocaleType<Locales> : FlattenLocale<OtherLocales extends ExplicitLocales ? GetLocaleType<OtherLocales> : GetLocaleType<Locales>>, Scope, Extract<keyof ((OtherLocales extends ExplicitLocales ? GetLocaleType<OtherLocales> : GetLocaleType<Locales>) extends Record<string, string> ? OtherLocales extends ExplicitLocales ? GetLocaleType<OtherLocales> : GetLocaleType<Locales> : FlattenLocale<OtherLocales extends ExplicitLocales ? GetLocaleType<OtherLocales> : GetLocaleType<Locales>>), string>>, Value_3 extends international_types.LocaleValue = international_types.ScopedValue<(OtherLocales extends ExplicitLocales ? GetLocaleType<OtherLocales> : GetLocaleType<Locales>) extends Record<string, string> ? OtherLocales extends ExplicitLocales ? GetLocaleType<OtherLocales> : GetLocaleType<Locales> : FlattenLocale<OtherLocales extends ExplicitLocales ? GetLocaleType<OtherLocales> : GetLocaleType<Locales>>, Scope, Key_3>>(key: Key_3, ...params: international_types.CreateParams<ReactParamsObject<Value_3>, (OtherLocales extends ExplicitLocales ? GetLocaleType<OtherLocales> : GetLocaleType<Locales>) extends Record<string, string> ? OtherLocales extends ExplicitLocales ? GetLocaleType<OtherLocales> : GetLocaleType<Locales> : FlattenLocale<OtherLocales extends ExplicitLocales ? GetLocaleType<OtherLocales> : GetLocaleType<Locales>>, Scope, Key_3, Value_3>): react.ReactNode;
     }>;
-    getCurrentLocale: () => OtherLocales extends ExplicitLocales ? keyof OtherLocales : keyof Locales;
+    getCurrentLocale: () => Promise<OtherLocales extends ExplicitLocales ? keyof OtherLocales : keyof Locales>;
     getStaticParams: () => {
         [x: string]: string;
     }[];
